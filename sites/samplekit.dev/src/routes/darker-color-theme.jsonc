{
	"name": "Darker",

	"colors": {
		//#region custom colors
		"editor.background": "#000",

		"scrollbar.shadow": "#272930",
		"editorStickyScrollHover.background": "#0b0c0e",

		"editorError.foreground": "#00000000", // OG hsl(0, 88.7%, 61.8%) #f44747
		"editorError.border": "#610000", // hsl(0, 100%, 19%) OG #00000000

		"editorWarning.foreground": "#00000000", // OG somewhere around #cfae37
		"editorWarning.border": "#614c00", // hsl(47, 100%, 19%) OG #00000000

		"editorInlayHint.background": "#00000000",
		"editorInlayHint.typeForeground": "#94b8b0", // OG hsl(167.8, 53.2%, 54.7%) #4EC9B0. New hsl(168, 20%, 65%)
		"editorInlayHint.parameterForeground": "#82b0c9", // OG hsl(200.8, 98%, 80.4%) #9CDCFE. New hsl(201, 40%, 65%)

		"diffEditor.insertedLineBackground": "#001a00", // "hsl(120, 100%, 5%)",
		"diffEditor.insertedTextBackground": "#003800", // "hsl(120, 100%, 11%)",
		"diffEditorGutter.insertedLineBackground": "#003800", // "hsl(120, 100%, 11%)",
		"diffEditorOverview.insertedForeground": "#003800", // "hsl(120, 100%, 11%)",

		"diffEditor.removedLineBackground": "#2f0404", // hsl(0, 84%, 10%)
		"diffEditor.removedTextBackground": "#5e0808", // hsl(0, 84%, 20%)
		"diffEditorGutter.removedLineBackground": "#5e0808", // hsl(0, 84%, 20%)
		"diffEditorOverview.removedForeground": "#5e0808", // hsl(0, 84%, 20%)

		"errorLens.errorForeground": "#f2706e", // oklch(70% 0.16 23)
		"errorLens.errorMessageBackground": "#f2706e1a", // oklch(70% 0.16 23 / 10%)
		"errorLens.warningForeground": "#dd8736", // oklch(70% 0.14 60)
		"errorLens.warningMessageBackground": "#dd87361a", // oklch(70% 0.14 60 / 10%)
		"errorLens.infoForeground": "#4fa8e1", // oklch(70% 0.12 240)
		"errorLens.infoMessageBackground": "#4fa8e11a", // oklch(70% 0.12 240 / 10%)
		"errorLens.hintForeground": "#b29e51", // oklch(70% 0.1 95)
		"errorLens.hintMessageBackground": "#b29e511a", // oklch(70% 0.1 95 / 10%)

		"notebook.cellEditorBackground": "#00000000",
		"notebook.outputContainerBackgroundColor": "#111111",

		// These are very similar to the defaults.
		// If "editor.guides.bracketPairs": false, the colors are hsl(0, 0%, 80%)
		"editorBracketHighlight.foreground1": "#ffd900", // hsl(51, 100%, 50%)
		"editorBracketHighlight.foreground2": "#db70d8", // hsl(302, 60%, 65%)
		"editorBracketHighlight.foreground3": "#1a9fff", // hsl(205, 100%, 55%)
		"editorBracketHighlight.unexpectedBracket.foreground": "#df2020", // hsl(0, 75%, 50%)

		// These are very subtle versions of the defaults
		// If "editor.bracketPairColorization.enabled": false, the colors are hsl(0, 0%, 25%) and hsl(0, 0%, 45%)
		"editorBracketPairGuide.background1": "#464439", // hsl(51, 10%, 25%)
		"editorBracketPairGuide.background2": "#443c43", // hsl(302, 6%, 25%)
		"editorBracketPairGuide.background3": "#394146", // hsl(205, 10%, 25%)
		"editorBracketPairGuide.activeBackground1": "#7e7b67", // hsl(51, 10%, 45%)
		"editorBracketPairGuide.activeBackground2": "#7a6c79", // hsl(302, 6%, 45%)
		"editorBracketPairGuide.activeBackground3": "#67757e", // hsl(205, 10%, 45%)

		//#endregion custom colors

		//#region "Dark (Visual Studio)"
		"editor.foreground": "#D4D4D4",
		"editor.inactiveSelectionBackground": "#3A3D41",
		"editorIndentGuide.background1": "#404040",
		"editorIndentGuide.activeBackground1": "#707070",
		"editor.selectionHighlightBackground": "#ADD6FF26",
		"list.dropBackground": "#383B3D",
		"activityBarBadge.background": "#007ACC",
		"sideBarTitle.foreground": "#BBBBBB",
		"input.placeholderForeground": "#A6A6A6",
		"menu.background": "#252526",
		"menu.foreground": "#CCCCCC",
		"statusBarItem.remoteForeground": "#FFF",
		"statusBarItem.remoteBackground": "#16825D",
		"ports.iconRunningProcessForeground": "#369432",
		"sideBarSectionHeader.background": "#0000",
		"sideBarSectionHeader.border": "#ccc3",
		"tab.lastPinnedBorder": "#ccc3",
		"list.activeSelectionIconForeground": "#FFF",
	},

	"tokenColors": [
		//#region custom italics
		// https://stackoverflow.com/questions/51110201/italicize-javascripts-reserved-keywords-in-vs-code
		{
			"scope": [
				// all comment types
				"comment",
				// true, false, null
				"constant.language",
				// import, from, export, default, return, if, for, break, continue, try, catch, finally,
				// throw, default, yield, await
				"keyword.control",
				// in, void, delete, instanceof
				"keyword.operator.expression",
				// debugger
				"keyword.other",
				// new
				"keyword.operator.new",
				// super, this, arguments
				"variable.language",
				// attributes in html, jsx, etc.
				"entity.other.attribute-name",
				// static, extends, async, private, public, implements
				// constructor, const, let, var, enum, class, function, interface
				// no explicit scopes for constructor, const, let, var
				// also no explicit scope for function without the arrow
				// therefore we enable all storage and explictly exclude the arrow in another scope
				"storage",
				// // no explicit scope for the eval keyword yet
				// // can be targeted with the scope below, but scope is too broad
				// "support.function",
				// // no explicit scope for the package keyword yet
				// // can be targeted with the scope below, but scope is too broad
				// "variable.other.readwrite",
			],
			"settings": {
				"fontStyle": "italic",
			},
		},
		{
			"scope": [
				// function keyword does not have an explicit scope without the arrow
				// therefore we explictly exclude the function arrow from being italicized
				"storage.type.function.arrow",
			],
			"settings": {
				"fontStyle": "",
			},
		},
		//#endregion custom italics

		//#region custom language settings
		{ "scope": ["string.quoted.docstring.multi.python"], "settings": { "foreground": "#6A9955" } },
		//#endregion custom language settings

		{
			"scope": ["meta.embedded", "source.groovy.embedded"],
			"settings": {
				"foreground": "#D4D4D4",
			},
		},
		{
			"scope": "emphasis",
			"settings": {
				"fontStyle": "italic",
			},
		},
		{
			"scope": "strong",
			"settings": {
				"fontStyle": "bold",
			},
		},
		{
			"scope": "header",
			"settings": {
				"foreground": "#000080",
			},
		},
		{
			"scope": "comment",
			"settings": {
				"foreground": "#6A9955",
			},
		},
		{
			"scope": "constant.language",
			"settings": {
				"foreground": "#569cd6",
			},
		},
		{
			"scope": [
				"constant.numeric",
				"variable.other.enummember",
				"keyword.operator.plus.exponent",
				"keyword.operator.minus.exponent",
			],
			"settings": {
				"foreground": "#b5cea8",
			},
		},
		{
			"scope": "constant.regexp",
			"settings": {
				"foreground": "#646695",
			},
		},
		{
			"scope": "entity.name.tag",
			"settings": {
				"foreground": "#569cd6",
			},
		},
		{
			"scope": "entity.name.tag.css",
			"settings": {
				"foreground": "#d7ba7d",
			},
		},
		{
			"scope": "entity.other.attribute-name",
			"settings": {
				"foreground": "#9cdcfe",
			},
		},
		{
			"scope": [
				"entity.other.attribute-name.class.css",
				"entity.other.attribute-name.class.mixin.css",
				"entity.other.attribute-name.id.css",
				"entity.other.attribute-name.parent-selector.css",
				"entity.other.attribute-name.pseudo-class.css",
				"entity.other.attribute-name.pseudo-element.css",
				"source.css.less entity.other.attribute-name.id",
				"entity.other.attribute-name.scss",
			],
			"settings": {
				"foreground": "#d7ba7d",
			},
		},
		{
			"scope": "invalid",
			"settings": {
				"foreground": "#f44747",
			},
		},
		{
			"scope": "markup.underline",
			"settings": {
				"fontStyle": "underline",
			},
		},
		{
			"scope": "markup.bold",
			"settings": {
				"fontStyle": "bold",
				"foreground": "#569cd6",
			},
		},
		{
			"scope": "markup.heading",
			"settings": {
				"fontStyle": "bold",
				"foreground": "#569cd6",
			},
		},
		{
			"scope": "markup.italic",
			"settings": {
				"fontStyle": "italic",
			},
		},
		{
			"scope": "markup.strikethrough",
			"settings": {
				"fontStyle": "strikethrough",
			},
		},
		{
			"scope": "markup.inserted",
			"settings": {
				"foreground": "#b5cea8",
			},
		},
		{
			"scope": "markup.deleted",
			"settings": {
				"foreground": "#ce9178",
			},
		},
		{
			"scope": "markup.changed",
			"settings": {
				"foreground": "#569cd6",
			},
		},
		{
			"scope": "punctuation.definition.quote.begin.markdown",
			"settings": {
				"foreground": "#6A9955",
			},
		},
		{
			"scope": "punctuation.definition.list.begin.markdown",
			"settings": {
				"foreground": "#6796e6",
			},
		},
		{
			"scope": "markup.inline.raw",
			"settings": {
				"foreground": "#ce9178",
			},
		},
		{
			"name": "brackets of XML/HTML tags",
			"scope": "punctuation.definition.tag",
			"settings": {
				"foreground": "#808080",
			},
		},
		{
			"scope": ["meta.preprocessor", "entity.name.function.preprocessor"],
			"settings": {
				"foreground": "#569cd6",
			},
		},
		{
			"scope": "meta.preprocessor.string",
			"settings": {
				"foreground": "#ce9178",
			},
		},
		{
			"scope": "meta.preprocessor.numeric",
			"settings": {
				"foreground": "#b5cea8",
			},
		},
		{
			"scope": "meta.structure.dictionary.key.python",
			"settings": {
				"foreground": "#9cdcfe",
			},
		},
		{
			"scope": "meta.diff.header",
			"settings": {
				"foreground": "#569cd6",
			},
		},
		{
			"scope": "storage",
			"settings": {
				"foreground": "#569cd6",
			},
		},
		{
			"scope": "storage.type",
			"settings": {
				"foreground": "#569cd6",
			},
		},
		{
			"scope": ["storage.modifier", "keyword.operator.noexcept"],
			"settings": {
				"foreground": "#569cd6",
			},
		},
		{
			"scope": ["string", "meta.embedded.assembly"],
			"settings": {
				"foreground": "#ce9178",
			},
		},
		{
			"scope": "string.tag",
			"settings": {
				"foreground": "#ce9178",
			},
		},
		{
			"scope": "string.value",
			"settings": {
				"foreground": "#ce9178",
			},
		},
		{
			"scope": "string.regexp",
			"settings": {
				"foreground": "#d16969",
			},
		},
		{
			"name": "String interpolation",
			"scope": [
				"punctuation.definition.template-expression.begin",
				"punctuation.definition.template-expression.end",
				"punctuation.section.embedded",
			],
			"settings": {
				"foreground": "#569cd6",
			},
		},
		{
			"name": "Reset JavaScript string interpolation expression",
			"scope": ["meta.template.expression"],
			"settings": {
				"foreground": "#d4d4d4",
			},
		},
		{
			"scope": [
				"support.type.vendored.property-name",
				"support.type.property-name",
				"variable.css",
				"variable.scss",
				"variable.other.less",
				"source.coffee.embedded",
			],
			"settings": {
				"foreground": "#9cdcfe",
			},
		},
		{
			"scope": "keyword",
			"settings": {
				"foreground": "#569cd6",
			},
		},
		{
			"scope": "keyword.control",
			"settings": {
				"foreground": "#569cd6",
			},
		},
		{
			"scope": "keyword.operator",
			"settings": {
				"foreground": "#d4d4d4",
			},
		},
		{
			"scope": [
				"keyword.operator.new",
				"keyword.operator.expression",
				"keyword.operator.cast",
				"keyword.operator.sizeof",
				"keyword.operator.alignof",
				"keyword.operator.typeid",
				"keyword.operator.alignas",
				"keyword.operator.instanceof",
				"keyword.operator.logical.python",
				"keyword.operator.wordlike",
			],
			"settings": {
				"foreground": "#569cd6",
			},
		},
		{
			"scope": "keyword.other.unit",
			"settings": {
				"foreground": "#b5cea8",
			},
		},
		{
			"scope": ["punctuation.section.embedded.begin.php", "punctuation.section.embedded.end.php"],
			"settings": {
				"foreground": "#569cd6",
			},
		},
		{
			"scope": "support.function.git-rebase",
			"settings": {
				"foreground": "#9cdcfe",
			},
		},
		{
			"scope": "constant.sha.git-rebase",
			"settings": {
				"foreground": "#b5cea8",
			},
		},
		{
			"name": "coloring of the Java import and package identifiers",
			"scope": ["storage.modifier.import.java", "variable.language.wildcard.java", "storage.modifier.package.java"],
			"settings": {
				"foreground": "#d4d4d4",
			},
		},
		{
			"name": "this.self",
			"scope": "variable.language",
			"settings": {
				"foreground": "#569cd6",
			},
		},
		//#endregion "Dark (Visual Studio)" */

		//#region "Dark+ (default dark)"
		{
			"name": "Function declarations",
			"scope": [
				"entity.name.function",
				"support.function",
				"support.constant.handlebars",
				"source.powershell variable.other.member",
				"entity.name.operator.custom-literal", // See https://en.cppreference.com/w/cpp/language/user_literal
			],
			"settings": {
				"foreground": "#DCDCAA",
			},
		},
		{
			"name": "Types declaration and references",
			"scope": [
				"support.class",
				"support.type",
				"entity.name.type",
				"entity.name.namespace",
				"entity.other.attribute",
				"entity.name.scope-resolution",
				"entity.name.class",
				"storage.type.numeric.go",
				"storage.type.byte.go",
				"storage.type.boolean.go",
				"storage.type.string.go",
				"storage.type.uintptr.go",
				"storage.type.error.go",
				"storage.type.rune.go",
				"storage.type.cs",
				"storage.type.generic.cs",
				"storage.type.modifier.cs",
				"storage.type.variable.cs",
				"storage.type.annotation.java",
				"storage.type.generic.java",
				"storage.type.java",
				"storage.type.object.array.java",
				"storage.type.primitive.array.java",
				"storage.type.primitive.java",
				"storage.type.token.java",
				"storage.type.groovy",
				"storage.type.annotation.groovy",
				"storage.type.parameters.groovy",
				"storage.type.generic.groovy",
				"storage.type.object.array.groovy",
				"storage.type.primitive.array.groovy",
				"storage.type.primitive.groovy",
			],
			"settings": {
				"foreground": "#4EC9B0",
			},
		},
		{
			"name": "Types declaration and references, TS grammar specific",
			"scope": [
				"meta.type.cast.expr",
				"meta.type.new.expr",
				"support.constant.math",
				"support.constant.dom",
				"support.constant.json",
				"entity.other.inherited-class",
			],
			"settings": {
				"foreground": "#4EC9B0",
			},
		},
		{
			"name": "Control flow / Special keywords",
			"scope": [
				"keyword.control",
				"source.cpp keyword.operator.new",
				"keyword.operator.delete",
				"keyword.other.using",
				"keyword.other.operator",
				"entity.name.operator",
			],
			"settings": {
				"foreground": "#C586C0",
			},
		},
		{
			"name": "Variable and parameter name",
			"scope": [
				"variable",
				"meta.definition.variable.name",
				"support.variable",
				"entity.name.variable",
				"constant.other.placeholder", // placeholders in strings
			],
			"settings": {
				"foreground": "#9CDCFE",
			},
		},
		{
			"name": "Constants and enums",
			"scope": ["variable.other.constant", "variable.other.enummember"],
			"settings": {
				"foreground": "#4FC1FF",
			},
		},
		{
			"name": "Object keys, TS grammar specific",
			"scope": ["meta.object-literal.key"],
			"settings": {
				"foreground": "#9CDCFE",
			},
		},
		{
			"name": "CSS property value",
			"scope": [
				"support.constant.property-value",
				"support.constant.font-name",
				"support.constant.media-type",
				"support.constant.media",
				"constant.other.color.rgb-value",
				"constant.other.rgb-value",
				"support.constant.color",
			],
			"settings": {
				"foreground": "#CE9178",
			},
		},
		{
			"name": "Regular expression groups",
			"scope": [
				"punctuation.definition.group.regexp",
				"punctuation.definition.group.assertion.regexp",
				"punctuation.definition.character-class.regexp",
				"punctuation.character.set.begin.regexp",
				"punctuation.character.set.end.regexp",
				"keyword.operator.negation.regexp",
				"support.other.parenthesis.regexp",
			],
			"settings": {
				"foreground": "#CE9178",
			},
		},
		{
			"scope": [
				"constant.character.character-class.regexp",
				"constant.other.character-class.set.regexp",
				"constant.other.character-class.regexp",
				"constant.character.set.regexp",
			],
			"settings": {
				"foreground": "#d16969",
			},
		},
		{
			"scope": ["keyword.operator.or.regexp", "keyword.control.anchor.regexp"],
			"settings": {
				"foreground": "#DCDCAA",
			},
		},
		{
			"scope": "keyword.operator.quantifier.regexp",
			"settings": {
				"foreground": "#d7ba7d",
			},
		},
		{
			"scope": "constant.character",
			"settings": {
				"foreground": "#569cd6",
			},
		},
		{
			"scope": "constant.character.escape",
			"settings": {
				"foreground": "#d7ba7d",
			},
		},
		{
			"scope": "entity.name.label",
			"settings": {
				"foreground": "#C8C8C8",
			},
		},
	],
	"semanticHighlighting": true,

	"semanticTokenColors": {
		"newOperator": "#C586C0",
		"stringLiteral": "#ce9178",
		"customLiteral": "#DCDCAA",
		"numberLiteral": "#b5cea8",
	},
	//#endregion "Dark+ (default dark)"
}
