##################### ðŸš§ WARNING: ENV VARS ARE BAKED INTO THE IMAGE ðŸš§ #####################
# Do not make resulting images public.
#
# Read Dockerfile.samplekit.gh for information.
#
# Do not make resulting images public.
##################### ðŸš§ WARNING: ENV VARS ARE BAKED INTO THE IMAGE ðŸš§ #####################

# Expects:
# permissions / variables / secrets defined in permissions.md

name: Check, build image, and publish to registry. Trigger the CapRover server to pull and deploy.

on:
  push:
    branches: [main, staging]
    paths:
      - 'Dockerfile.samplekit.gh'
      - 'tsconfig.base.json'
      - '.github/workflows/samplekit.yaml'
      - 'packages/auth/**'
      - 'packages/preprocess-katex/**'
      - 'packages/preprocess-markdown/**'
      - 'packages/preprocess-shiki/**'
      - 'packages/svelte-crop-window/**'
      - 'sites/samplekit.dev/**'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG_SHA: ${{ steps.create_image_tags.outputs.IMAGE_TAG_SHA }}
      IMAGE_TAG: ${{ steps.create_image_tags.outputs.IMAGE_TAG }}
    steps:
      - name: Create Image Tags
        id: create_image_tags
        run: |
          echo "IMAGE_TAG_SHA=${{ vars.DOCKER_REGISTRY }}/${{ github.repository }}:${{ github.ref_name}}_sk_$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "IMAGE_TAG=${{ vars.DOCKER_REGISTRY }}/${{ github.repository }}:sk-latest" >> $GITHUB_OUTPUT
          else
            echo "IMAGE_TAG=${{ vars.DOCKER_REGISTRY }}/${{ github.repository }}:sk-${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

  build-publish:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push docker image â€“ production
        if: github.ref_name == 'main'
        uses: docker/build-push-action@v5
        with:
          build-args: |
            "ENV_FILE=${{ secrets.SK_PROD_ENV_FILE }}"
            "MODE=production"
          push: true
          file: Dockerfile.samplekit.gh
          tags: ${{ needs.setup.outputs.IMAGE_TAG }},${{ needs.setup.outputs.IMAGE_TAG_SHA }}

      - name: Build and push docker image â€“ staging
        if: github.ref_name == 'staging'
        uses: docker/build-push-action@v5
        with:
          build-args: |
            "ENV_FILE=${{ secrets.SK_STAGING_ENV_FILE }}"
            "MODE=staging"
          push: true
          file: Dockerfile.samplekit.gh
          tags: ${{ needs.setup.outputs.IMAGE_TAG }},${{ needs.setup.outputs.IMAGE_TAG_SHA }}

  pull-deploy:
    runs-on: ubuntu-latest
    needs: [setup, build-publish]
    steps:
      - name: Deploy CapRover AppÂ â€“Â production
        if: github.ref_name == 'main'
        uses: caprover/deploy-from-github@v1.1.2
        with:
          app: ${{ vars.SK_PROD_CR_APP }}
          token: ${{ secrets.SK_PROD_CR_APP_TOKEN }}
          server: ${{ vars.CR_SERVER }}
          image: ${{ needs.setup.outputs.IMAGE_TAG }}

      - name: Deploy CapRover App â€“ staging
        if: github.ref_name == 'staging'
        uses: caprover/deploy-from-github@v1.1.2
        with:
          app: ${{ vars.SK_STAGING_CR_APP }}
          token: ${{ secrets.SK_STAGING_CR_APP_TOKEN }}
          server: ${{ vars.CR_SERVER }}
          image: ${{ needs.setup.outputs.IMAGE_TAG }}
